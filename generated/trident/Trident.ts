// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class AddPelletEvent extends ethereum.Event {
  get params(): AddPelletEvent__Params {
    return new AddPelletEvent__Params(this);
  }
}

export class AddPelletEvent__Params {
  _event: AddPelletEvent;

  constructor(event: AddPelletEvent) {
    this._event = event;
  }

  get pelletId(): string {
    return this._event.parameters[0].value.toString();
  }

  get pelletDetailsCid(): string {
    return this._event.parameters[1].value.toString();
  }
}

export class ExitPelletEvent extends ethereum.Event {
  get params(): ExitPelletEvent__Params {
    return new ExitPelletEvent__Params(this);
  }
}

export class ExitPelletEvent__Params {
  _event: ExitPelletEvent;

  constructor(event: ExitPelletEvent) {
    this._event = event;
  }

  get soId(): string {
    return this._event.parameters[0].value.toString();
  }

  get pelletId(): string {
    return this._event.parameters[1].value.toString();
  }

  get pelletExitCid(): string {
    return this._event.parameters[2].value.toString();
  }
}

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class Trident extends ethereum.SmartContract {
  static bind(address: Address): Trident {
    return new Trident("Trident", address);
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }
}

export class AddPelletCall extends ethereum.Call {
  get inputs(): AddPelletCall__Inputs {
    return new AddPelletCall__Inputs(this);
  }

  get outputs(): AddPelletCall__Outputs {
    return new AddPelletCall__Outputs(this);
  }
}

export class AddPelletCall__Inputs {
  _call: AddPelletCall;

  constructor(call: AddPelletCall) {
    this._call = call;
  }

  get pelletId(): string {
    return this._call.inputValues[0].value.toString();
  }

  get pelletDetailsCid(): string {
    return this._call.inputValues[1].value.toString();
  }
}

export class AddPelletCall__Outputs {
  _call: AddPelletCall;

  constructor(call: AddPelletCall) {
    this._call = call;
  }
}

export class MovePelletFromWarehouseCall extends ethereum.Call {
  get inputs(): MovePelletFromWarehouseCall__Inputs {
    return new MovePelletFromWarehouseCall__Inputs(this);
  }

  get outputs(): MovePelletFromWarehouseCall__Outputs {
    return new MovePelletFromWarehouseCall__Outputs(this);
  }
}

export class MovePelletFromWarehouseCall__Inputs {
  _call: MovePelletFromWarehouseCall;

  constructor(call: MovePelletFromWarehouseCall) {
    this._call = call;
  }

  get soId(): string {
    return this._call.inputValues[0].value.toString();
  }

  get pelletId(): string {
    return this._call.inputValues[1].value.toString();
  }

  get pelletExitCid(): string {
    return this._call.inputValues[2].value.toString();
  }
}

export class MovePelletFromWarehouseCall__Outputs {
  _call: MovePelletFromWarehouseCall;

  constructor(call: MovePelletFromWarehouseCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall extends ethereum.Call {
  get inputs(): RenounceOwnershipCall__Inputs {
    return new RenounceOwnershipCall__Inputs(this);
  }

  get outputs(): RenounceOwnershipCall__Outputs {
    return new RenounceOwnershipCall__Outputs(this);
  }
}

export class RenounceOwnershipCall__Inputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall__Outputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}
